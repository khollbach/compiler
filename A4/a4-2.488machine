// 2-3                                 
PUSH 0                                 // machinecode000
PUSH 0                                 // machinecode001
PUSH 0                                 // machinecode002
PUSH 0                                 // machinecode003

// 2-4
PUSH MACHINE_FALSE                     // machinecode004
PUSH MACHINE_FALSE                     // machinecode005
PUSH MACHINE_FALSE                     // machinecode006

// 2-5
ADDR 0 0 // a                          // machinecode007
// b
ADDR 0 1                               // machinecode008
LOAD                                   // machinecode009
// c
ADDR 0 2                               // machinecode010
LOAD                                   // machinecode011
ADD      // b + c                      // machinecode012
// d
ADDR 0 3                               // machinecode013
LOAD                                   // machinecode014
// c
ADDR 0 2                               // machinecode015
LOAD                                   // machinecode016
MUL      // d * c                      // machinecode017
SUB      // b + c - d * c              // machinecode018
// b
ADDR 0 1                               // machinecode019
LOAD                                   // machinecode020
// c
ADDR 0 0                               // machinecode021
LOAD                                   // machinecode022
DIV      // b / c                      // machinecode023
ADD      // b + c - d * c + b / c      // machinecode024
STORE    // a:= b + c - d * c + b / c  // machinecode025

// 2-6
ADDR 0 4 // p                          // machinecode026
PUSH MACHINE_FALSE // false            // machinecode027
// not false
PUSH MACHINE_FALSE                     // machinecode028
EQ                                     // machinecode029
// q
ADDR 0 4                               // machinecode030
LOAD                                   // machinecode031
// r
ADDR 0 5                               // machinecode032
LOAD                                   // machinecode033
MUL      // q and r                    // machinecode034
// not q and r
PUSH MACHINE_FALSE                     // machinecode035
EQ                                     // machinecode036
OR       // not false or not q and r   // machinecode037
STORE    // p= not false or not q and r// machinecode038

// 2-7
// p
ADDR 0 3                               // machinecode039
LOAD                                   // machinecode040
PUSH machinecode046                    // machinecode041
BF                                     // machinecode042
// a := 3
ADDR 0 0                               // machinecode043
PUSH 3                                 // machinecode044
STORE                                  // machinecode045

// 2-8
// p or not p
ADDR 0 3                               // machinecode046
LOAD                                   // machinecode047
ADDR 0 3                               // machinecode048
LOAD                                   // machinecode049
PUSH MACHINE_FALSE                     // machinecode050
EQ                                     // machinecode051
OR                                     // machinecode052
PUSH machinecode060                    // machinecode053
BF                                     // machinecode054
// b:= 2              
ADDR 0 1                               // machinecode055
PUSH 2                                 // machinecode056
STORE                                  // machinecode057
PUSH machinecode063                    // machinecode058
BR                                     // machinecode059
// b:= 0
ADDR 0 1                               // machinecode060
PUSH 0                                 // machinecode061
STORE                                  // machinecode062

// 2-9
// while c < 7 do
ADDR 0 2                               // machinecode063
LOAD                                   // machinecode064
PUSH 7                                 // machinecode065
LT                                     // machinecode066
PUSH machinecode074                    // machinecode067
BF                                     // machinecode068
// c := 6
ADDR 0 3                               // machinecode069
PUSH 6                                 // machinecode070
STORE                                  // machinecode071
PUSH machinecode063                    // machinecode072
BR                                     // machinecode073

// 2-10
// while true do
PUSH MACHINE_TRUE                      // machinecode074
PUSH machinecode085                    // machinecode075
BF                                     // machinecode076
// b := b + 1
ADDR 0 2                               // machinecode077
ADDR 0 2                               // machinecode078
LOAD                                   // machinecode079
PUSH 1                                 // machinecode080
ADD                                    // machinecode081
STORE                                  // machinecode082
PUSH machinecode074                    // machinecode083
BR                                     // machinecode084

//2-11

                        







          







