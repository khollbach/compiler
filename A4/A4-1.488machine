PUSH 0
PUSH 577
DUPN


ADDR 0 0 //gets i
PUSH 1
STORE   //i =1


ADDR 0 1 //address of j
ADDR 0 0 // address of i
LOAD
PUSH 3
ADD
STORE

ADDR 0 2 //address of k
ADDR 0 1 //address of j
LOAD
ADDR 0 0 // address of i
LOAD
SUB
STORE

ADDR 0 3 //address of l
ADDR 0 1 //address of j
LOAD
ADDR 0 2 // address of k
LOAD
MULT
STORE


ADDR 0 4 //address of m
ADDR 0 2 //address of k
LOAD
ADDR 0 3 // address of l
LOAD
DIV
STORE

ADDR 0 5 //gets p
PUSH MACHINE_TRUE
STORE

ADDR 0 6 //gets q
PUSH MACHINE_FALSE
STORE


ADDR 0 7 //get r
ADDR 0 6 //get q
LOAD
PUSH MACHINE_FALSE
EQ
STORE



ADDR 0 8
ADDR 0 5 //get p
LOAD
ADDR 0 7 //get q
LOAD
OR
STORE

ADDR 0 9
ADDR 0 8
LOAD
ADDR 0 5
LOAD
AND
STORE

ADDR 0 5
ADDR 0 0
LOAD
ADDR 0 1
LOAD
LT
STORE


ADDR 0 6
ADDR 0 2
LOAD
ADDR 0 3
LOAD
LT
ADDR 0 2
LOAD
ADDR 0 3
LOAD
EQ
OR
STORE

ADDR 0 7
ADDR 0 1
LOAD
ADDR 0 3
LOAD
EQ
STORE

ADDR 0 8
ADDR 0 2
LOAD
ADDR 0 4
LOAD
EQ
PUSH MACHINE_FALSE
EQ
STORE

ADDR 0 9
ADDR 0 2
LOAD
ADDR 0 3
LOAD
LT
ADDR 0 2
LOAD
ADDR 0 3
LOAD
EQ
OR
PUSH MACHINE_FALSE
EQ
STORE


ADDR 0 9
ADDR 0 2
LOAD
ADDR 0 3
LOAD
LT
PUSH MACHINE_FALSE
EQ
STORE


ADDR 0 6
ADDR 0 7
LOAD
ADDR 0 8
LOAD
EQ
STORE


ADDR 0 9
ADDR 0 8
LOAD
ADDR 0 7
LOAD
EQ
PUSH MACHINE_FALSE
EQ
STORE


ADDR 0 10
PUSH 5
PUSH 1
SUB
ADD
PUSH 5
STORE

//LOOK this over cuz i am not sure its right
// B[i+1]
ADDR 0 17
ADDR 0 0
LOAD
PUSH 1
ADD
PUSH -100
SUB
ADD
// A[j-2]
ADDR 0 10
ADDR 0 1
LOAD
PUSH 2
SUB
PUSH 1
SUB
ADD
LOAD
STORE

// C[-4]
ADDR 0 167
PUSH -4
PUSH -7
SUB
ADD
ADDR 0 5
LOAD
ADDR 0 6
LOAD
OR
STORE

ADDR 0 7
ADDR 0 177
ADDR 0 1
LOAD
PUSH 200
ADD
PUSH 1
SUB
ADD
LOAD
STORE
